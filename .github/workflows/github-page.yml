name: "Haddock documentation"

on:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  haddocks:
    name: "Haddocks"

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7"]
        os: [ubuntu-latest]

    env:
      # current ref from: 27.02.2022
      SECP256K1_REF: ac83be33d0956faf6b7f61a60ab524ef7d6a473a

      SECP_CACHE_VERSION: "2022-12-29"

      # we need the LD_LIBRARY_PATH env var here because we ended up installing libsecp256k1 into /usr/local,
      # pkg-config, *does* return the proper location, but the library does not appear to be properly referenced.
      # FIXME: this is arguably a bug, and pkg-config should return the right values!
      LD_LIBRARY_PATH: '/usr/local/lib'

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout ouroboros-network repository
      uses: actions/checkout@v3

    - name: Configure to use libsodium
      run: |
        cat >> cabal.project <<EOF
        package cardano-crypto-praos
          flags: -external-libsodium-vrf
        EOF

    - name: Install Haskell
      uses: haskell/actions/setup@v2
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.10.1.0'

    - name: Install build environment
      run: |
        sudo apt-get update
        sudo apt-get -y install libsodium-dev

    - name: Install secp256k1
      uses: input-output-hk/setup-secp256k1@v1
      with:
        git-ref: ${{ env.SECP256K1_REF }}
        cache-version: ${{ env.SECP_CACHE_VERSION }}

    - name: Set up temp directory
      run: |
        echo 'TMPDIR=${{ runner.temp }}'  >> $GITHUB_ENV
        echo 'TMP=${{ runner.temp }}'     >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Cache cabal store
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: cache-haddock-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-${{ github.sha }}
        restore-keys: cache-haddock-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-

    - name: Update Hackage index
      run: cabal update

    - name: Build plan
      run: cabal --builddir="$CABAL_BUILDDIR" build --dry-run --enable-tests all

    - name: Build Haddock documentation ðŸ”§
      run: |
        mkdir ./haddocks
        ./scripts/haddocs.sh ./haddocks

    - name: Build documents
      run: |
        for res in $(nix-build -A network-docs); do
          for pdf in $res/*.pdf; do
            PDF_DIR=haddocks/pdfs/$(basename $pdf .pdf)
            mkdir -p $PDF_DIR
            echo '<!DOCTYPE html>' > $PDF_DIR/index.html
            echo -n '<!DOCTYPE html><meta http-equiv="refresh" content="0; URL=' >> $PDF_DIR/index.html
            echo -n $(basename $pdf) >> $PDF_DIR/index.html
            echo '">' >> $PDF_DIR/index.html
            cp $pdf $PDF_DIR/
          done
        done

    - name: Upload artifacts
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./haddocks

    - name: Deploy ðŸš€
      id: deployment
      uses: actions/deploy-pages@v2
